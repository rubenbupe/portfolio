---
type Props = {
	color: string;
	borderColor: string;
};

const { color, borderColor } = Astro.props;
---

<style define:vars={{ color, 'border-color': borderColor }}></style>

<script>
	// Scroll events can be expensive, it is recommended to change them once
	// scroll css animations are supported for most users.
	// https://caniuse.com/mdn-css_properties_animation-timeline_scroll
	const animationStartOffset = 50;
	const animationEndOffset = 450;
	const scrollHandler = () => {
		const conicHeaders = document.querySelectorAll('.conic-header') as unknown as HTMLElement[];

		if (!conicHeaders.length) return;
		const onScroll = () => {
			conicHeaders.forEach(conicHeader => {
				if (conicHeader.getBoundingClientRect().y > window.innerHeight) return;
				if (conicHeader.getBoundingClientRect().bottom < 0) return;

				const fromBottom = window.innerHeight - conicHeader.getBoundingClientRect().y;

				const rightPercentage = Math.min(
					100,
					Math.max(20, ((fromBottom - animationStartOffset) / animationEndOffset) * 100)
				);
				const leftPercentage = 100 - rightPercentage;
				const opacity = Math.min(1, Math.max(0.5, (fromBottom - animationStartOffset) / animationEndOffset));

				const borderLeftPercentage =
					50 - Math.min(30, Math.max(0, ((fromBottom - animationStartOffset) / animationEndOffset) * 30));
				const borderRightPercentage = 100 - borderLeftPercentage;

				conicHeader.style.background = `conic-gradient(from 90deg at ${leftPercentage}% 0%, var(--color), transparent 180deg) 0% 0% / 50% 100% no-repeat, conic-gradient(from 270deg at ${rightPercentage}% 0%, transparent 180deg, var(--color)) 100% 0% / 50% 100% no-repeat`;
				conicHeader.style.opacity = opacity.toString();
				conicHeader.style.borderImage = `linear-gradient(to right, transparent, transparent ${borderLeftPercentage - 10}%, var(--border-color) ${borderLeftPercentage}%, var(--border-color) ${borderRightPercentage}%, transparent ${borderRightPercentage + 10}%, transparent) 30`;
			});
		};
		document.addEventListener('scroll', onScroll);

		document.addEventListener('astro:before-swap', () => {
			document.removeEventListener('scroll', onScroll);
		});

		onScroll();
	};

	scrollHandler();

	document.addEventListener('astro:after-swap', () => {
		scrollHandler();
	});
</script>
<div
	class="conic-header absolute h-[600px] w-full border-t border-t-transparent after:content-[''] after:absolute after:inset-0 after:bg-[linear-gradient(to_bottom,transparent_70%,hsl(var(--background)))]"
>
</div>
