---
import Section from '../components/Section.astro';
import ConicHeader from '../components/ConicHeader.astro';
import { Particles } from '../components/Particles';
import Separator from '../components/Separator.astro';
import GridIcon from '../components/GridIcon.astro';
import { cn } from '../lib/utils';
import projectGabinsoftDashboard from '../assets/project-gabinsoft-dashboard.webp';
import projectMeAsesoranRentas from '../assets/project-measesoran-rentas.webp';
import projectBuildingRoofDetection from '../assets/project-building-roof-detection.webp';
import projectGabinsoftLanding from '../assets/project-gabinsoft-landing.webp';
import projectFacialExpressionRecognition from '../assets/project-facial-expression-recognition.webp';
import projectOpenSource from '../assets/project-open-source.webp';
import { Image } from 'astro:assets';

const projects = [
	{
		title: 'Gabinsoft Web and Mobile Apps',
		paragraphs: [
			'Gabinsoft is a company specialized in building tools for psychologists. I developed the full-stack web and mobile applications, as well as the backend services.',
			'These apps include a complete CRM, billing system, calendar, real-time chat, video calls, and more.'
		],
		badges: ['TypeScript', 'Go', 'React', 'React Native', 'CSS', 'SQL'],
		url: 'https://app.gabinsoft.com',
		image: projectGabinsoftDashboard,
		feature: false
	},
	{
		title: 'Me Asesoran Rentas',
		paragraphs: [
			'Me Asesoran Rentas is an app that helps users file their tax returns. I developed the backend services, web and mobile apps, and review tools.',
			'This project integrates several government APIs and is used by thousands of people every year.'
		],
		badges: ['TypeScript', 'React', 'React Native', 'CSS', 'SQL'],
		url: 'https://rentas.measesoran.com',
		image: projectMeAsesoranRentas,
		feature: false
	},
	{
		title: 'Open Source contributions',
		paragraphs: [
			"I've contributed to the open source community by releasing several of my own projects and plan to continue doing so. I believe open source is the future of software development and it's important to give back to the community.",
			'Some of my projects include React Navigation components, machine learning projects, and a Twitter client for bash.'
		],
		badges: ['TypeScript', 'React Native', 'Python', 'Bash'],
		url: 'https://github.com/rubenbupe',
		image: projectOpenSource,
		feature: true
	},
	{
		title: 'Gabinsoft landing & website',
		paragraphs: [
			"I developed the Gabinsoft website, featuring a hero section inspired by Linear's site and several sections showcasing the app features.",
			'Focusing on performance, SEO, and accessibility, I built the site using Astro, TailwindCSS, and TypeScript.',
			'Later, I integrated a headless CMS so the marketing team could update the site without developer intervention, along with a custom caching layer to optimize performance.'
		],
		badges: ['TypeScript', 'Astro', 'TailwindCSS', 'Strapi'],
		url: 'https://gabinsoft.com',
		image: projectGabinsoftLanding,
		feature: false
	},
	{
		title: 'Facial expression recognition',
		paragraphs: [
			'This was one of my final university projects. I built a system capable of detecting facial expressions in real time using a webcam.',
			'Developed with TensorFlow and OpenCV, the system could detect 3 expressions with 86% accuracy, or 5 expressions with 74% accuracy.',
			'I received an honorable mention for this project.'
		],
		badges: ['TypeScript', 'Astro', 'TailwindCSS'],
		url: 'https://github.com/rubenbupe/facial-expressions-detector',
		image: projectFacialExpressionRecognition,
		feature: false
	},
	{
		title: 'Building roof detection',
		paragraphs: [
			'This was also one of my final university projects. We built a system that detects building roofs in satellite images.',
			'I designed a microservices architecture to demonstrate real-world usage, including a web app, a backend for image processing, and an analytics service. I used Docker and Kubernetes for deployment as part of a CI/CD pipeline.',
			"This project earned me a job offer from my professor's company, which I declined to pursue my own projects."
		],
		badges: ['Python', 'React', 'Docker', 'Kubernetes', 'MongoDB', 'TensorFlow', 'Github Actions'],
		url: 'https://github.com/rubenbupe/building-roof-detection',
		image: projectBuildingRoofDetection,
		feature: true
	}
];
---

<script>
	const handleMouse = () => {
		const projectsGrid = document.getElementById('projects-grid');
		const cursorGlow = document.getElementById('cursor-glow');

		if (!projectsGrid || !cursorGlow) return;

		projectsGrid.addEventListener('mousemove', e => {
			const bbox = projectsGrid.getBoundingClientRect();
			const x = e.clientX - bbox.left - cursorGlow.offsetWidth / 2;
			const y = e.clientY - bbox.top - cursorGlow.offsetHeight / 2;

			requestAnimationFrame(() => {
				cursorGlow.style.left = `${x}px`;
				cursorGlow.style.top = `${y}px`;
			});
		});

		projectsGrid.addEventListener('mouseleave', () => {
			cursorGlow.style.opacity = '0';
		});

		projectsGrid.addEventListener('mouseenter', () => {
			cursorGlow.style.opacity = '1';
		});
	};

	handleMouse();
	document.addEventListener('astro:after-swap', () => {
		handleMouse();
	});
</script>
<div class="relative w-full flex flex-col overflow-hidden">
	<ConicHeader color="rgba(97,106,115,.12)" borderColor="rgba(247,247,247,.22)" />
	<div class="w-full max-w-[40rem] h-40 relative self-center">
		<Particles
			client:visible
			background="transparent"
			minSize={0.4}
			maxSize={1}
			particleDensity={100}
			className="w-full h-full"
			particleColor="#FFFFFF"
		/>
	</div>
	<Section id="projects" class="relative py-24 min-h-[90vh] flex flex-col">
		<div class="grid md:grid-cols-2 gap-12 px-4 md:px-12">
			<div class="flex gap-4 col-start-2">
				<Separator class="inline flex-1 w-fit translate-y-1 border-primary" />
				<h2 class="inline text-2xl font-bold tracking-tight sm:text-4xl md:text-5xl">Some projects</h2>
			</div>
		</div>

		<div
			id="projects-grid"
			class="relative mt-24 mb-24 grid md:grid-cols-2 border-l border-b border-dashed bg-gradient-to-b from-foreground/10 [box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.1)]"
		>
			<div class="absolute w-full h-full overflow-hidden pointer-events-none">
				<div
					id="cursor-glow"
					class="absolute w-24 h-24 rounded-full bg-foreground pointer-events-none opacity-0 transition-opacity duration-300 ease-in-out blur-[150px] [will-change:filter]"
				>
				</div>
			</div>
			<div
				class="w-48
							h-48
					absolute
					-top-48
					-left-48
					border-b
					border-r
					border-dashed
					[mask-image:linear-gradient(to_bottom_right,transparent_50%,black)]"
			>
			</div>

			<div
				class="w-48
							h-48
							absolute
							-bottom-48
							-right-48
							border-t
							border-l
							border-dashed
							[mask-image:linear-gradient(to_top_left,transparent_50%,black)]"
			>
			</div>
			<div
				class="w-48
							h-48
							absolute
							-top-48
							-right-48
							border-b
							border-l
							border-dashed
							[mask-image:linear-gradient(to_bottom_left,transparent_50%,black)]"
			>
			</div>
			<div
				class="w-48
							h-48
							absolute
							-bottom-48
							-left-48
							border-t
							border-r
							border-dashed
							[mask-image:linear-gradient(to_top_right,transparent_50%,black)]"
			>
			</div>
			<GridIcon class="absolute h-6 w-6 -top-3 -left-3 dark:text-white text-foreground" />
			<GridIcon class="absolute h-6 w-6 -bottom-3 -left-3 dark:text-white text-foreground" />
			<GridIcon class="absolute h-6 w-6 -top-3 -right-3 dark:text-white text-foreground" />
			<GridIcon class="absolute h-6 w-6 -bottom-3 -right-3 dark:text-white text-foreground" />

			{
				projects.map(project => (
					<a
						href={project.url}
						target="_blank"
						class={cn(
							`group border-t border-r border-dashed w-full cursor-pointer hover:[box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.2)] transition-all duration-500 flex flex-col justify-between`,
							project.feature ? 'md:col-span-2 md:grid md:grid-cols-2 items-center' : 'md:col-span-1'
						)}
					>
						<div class="p-8 group-hover:-translate-x-2 group-hover:-translate-y-2 transition-all duration-500">
							<h3 class="text-xl font-bold">
								<code>{project.title}</code>
							</h3>
							<div class="w-full mt-4">
								<div class="flex flex-col gap-2">
									{project.paragraphs.map(paragraph => (
										<p class="text-sm text-foreground/50">
											<code>{paragraph}</code>
										</p>
									))}
								</div>
							</div>
							<div class="flex gap-2 mt-4 flex-wrap">
								{project.badges.map(badge => (
									<span class="text-xs border-foreground text-foreground border border-dashed p-1 px-2 rounded-full group-hover:bg-foreground/20 transition-all duration-500">
										<code>{badge}</code>
									</span>
								))}
							</div>
						</div>
						<div class={cn('relative w-full aspect-video p-8 overflow-hidden')}>
							<div class="absolute inset-8 bg-foreground/20 group-hover:translate-x-2 group-hover:translate-y-2 transition-all duration-500 ease-in-out group-hover:[box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.2)]" />
							<Image
								src={project.image}
								alt="Project 1"
								class="w-full h-full filter grayscale group-hover:filter-none transition-all duration-500 group-hover:-translate-x-2 group-hover:-translate-y-2 group-hover:shadow object-cover"
							/>
						</div>
					</a>
				))
			}
		</div>
	</Section>
</div>
