---
import Section from "../components/Section.astro";
import ConicHeader from "../components/ConicHeader.astro";
import { Particles } from "../components/Particles";
import Separator from "../components/Separator.astro";
import GridIcon from "../components/GridIcon.astro";
import { cn } from "../lib/utils";
import projectGabinsoftDashboard from "../assets/project-gabinsoft-dashboard.webp";
import projectMeAsesoranRentas from "../assets/project-measesoran-rentas.webp";
import projectBuildingRoofDetection from "../assets/project-building-roof-detection.webp";
import projectGabinsoftLanding from "../assets/project-gabinsoft-landing.webp";
import projectFacialExpressionRecognition from "../assets/project-facial-expression-recognition.webp";
import projectOpenSource from "../assets/project-open-source.webp";
import { Image } from "astro:assets";

const projects = [
    {
        title: "Gabinsoft Web and Mobile Apps",
        paragraphs: [
            "Gabinsoft is a company that specializes in building tools for psychologists. I created the full stack web and mobile apps, as well as the backend services.",
            "This apps include a full CRM, a billing system, a calendar, real-time chat, video calls, and more.",
        ],
        badges: ["TypeScript", "Go", "React", "React Native", "CSS", "SQL"],
        url: "https://app.gabinsoft.com",
        image: projectGabinsoftDashboard,
        feature: false,
    },
    {
        title: "Me Asesoran Rentas",
        paragraphs: [
            "Me Asesoran Rentas is an app that helps people submit their tax returns. I created the backend services, the web and mobile apps, and the review tools.",
            "This project has a lot of integrations with the government's APIs, and it's used by thousands of people every year.",
        ],
        badges: ["TypeScript", "React", "React Native", "CSS", "SQL"],
        url: "https://rentas.measesoran.com",
        image: projectMeAsesoranRentas,
        feature: false,
    },
    {
        title: "Open Source contributions",
        paragraphs: [
            "I've contributed to the open source community by releasing a few small projects of my own, and will continue to do so. I believe that open source is the future of software development, and I feel that it's important to give back to the community that has given me so much.",
            "Some of my projects include a few React Navigation components, some ML projects, and a Twitter client for bash.",
        ],
        badges: ["TypeScript", "React Native", "Python", "Bash"],
        url: "https://github.com/rubenbupe",
        image: projectOpenSource,
        feature: true,
    },
    {
        title: "Gabinsoft landing & website",
        paragraphs: [
            "I created the website for Gabinsoft, with a hero section inspired by Linear's website, and a few sections showcasing the features of the apps.",
            "Focusing on performance, SEO, and accessibility, I built the site using Astro, TailwindCSS, and TypeScript.",
            "Later, I added a headless CMS to allow the marketing team to update the site without needing a developer, and a custom caching layer to avoid hitting the CMS on every request until the content changes.",
        ],
        badges: ["TypeScript", "Astro", "TailwindCSS", "Strapi"],
        url: "https://gabinsoft.com",
        image: projectGabinsoftLanding,
        feature: false,
    },
    {
        title: "Facial expression recognition",
        paragraphs: [
            "This was one of my last projects at my university. I created a system that could detect facial expressions in real-time using a webcam.",
            "The system was built using TensorFlow and OpenCV, and it was able to detect 3 different expressions with an accuracy of 86%, or 5 different expressions with an accuracy of 74%.",
            "I got honorable mention for this project.",
        ],
        badges: ["TypeScript", "Astro", "TailwindCSS"],
        url: "https://github.com/rubenbupe/facial-expressions-detector",
        image: projectFacialExpressionRecognition,
        feature: false,
    },
    {
        title: "Building roof detection",
        paragraphs: [
            "This was also one of my last projects at my university. We created a system that could detect the roofs of buildings in satellite images.",
            "I also developed a microservices architecture to showcase how the system could be used in a real-world scenario. This included a web app, a backend service to process the images, and an analytics service. I used Docker and Kubernetes to deploy the system as part of a CI/CD pipeline.",
            "This project got me an offer to work at my professor's company, which I declined to pursue my own projects.",
        ],
        badges: [
            "Python",
            "React",
            "Docker",
            "Kubernetes",
            "MongoDB",
            "TensorFlow",
            "Github Actions",
        ],
        url: "https://github.com/rubenbupe/building-roof-detection",
        image: projectBuildingRoofDetection,
        feature: true,
    },
];
---

<script>
    const handleMouse = () => {
        const projectsGrid = document.getElementById("projects-grid");
        const cursorGlow = document.getElementById("cursor-glow");

        if (!projectsGrid || !cursorGlow) return;

        projectsGrid.addEventListener("mousemove", (e) => {
            const bbox = projectsGrid.getBoundingClientRect();
            const x = e.clientX - bbox.left - cursorGlow.offsetWidth / 2;
            const y = e.clientY - bbox.top - cursorGlow.offsetHeight / 2;

            requestAnimationFrame(() => {
                cursorGlow.style.left = `${x}px`;
                cursorGlow.style.top = `${y}px`;
            });
        });

        projectsGrid.addEventListener("mouseleave", () => {
            cursorGlow.style.opacity = "0";
        });

        projectsGrid.addEventListener("mouseenter", () => {
            cursorGlow.style.opacity = "1";
        });
    };

    handleMouse();
    document.addEventListener("astro:after-swap", () => {
        handleMouse();
    });
</script>
<div class="relative w-full flex flex-col overflow-hidden">
    <ConicHeader
        color="rgba(97,106,115,.12)"
        borderColor="rgba(247,247,247,.22)"
    />
    <div class="w-full max-w-[40rem] h-40 relative self-center">
        <Particles
            client:visible
            background="transparent"
            minSize={0.4}
            maxSize={1}
            particleDensity={100}
            className="w-full h-full"
            particleColor="#FFFFFF"
        />
    </div>
    <Section id="projects" class="relative py-24 min-h-[90vh] flex flex-col">
        <div class="grid md:grid-cols-2 gap-12 px-4 md:px-12">
            <div class="flex gap-4 col-start-2">
                <Separator
                    class="inline flex-1 w-fit translate-y-1 border-primary"
                />
                <h2
                    class="inline text-2xl font-bold tracking-tight sm:text-4xl md:text-5xl"
                >
                    Some projects
                </h2>
            </div>
        </div>

        <div
            id="projects-grid"
            class="relative mt-24 mb-24 grid md:grid-cols-2 border-l border-b border-dashed bg-gradient-to-b from-foreground/10 [box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.1)]"
        >
            <div
                class="absolute w-full h-full overflow-hidden pointer-events-none"
            >
                <div
                    id="cursor-glow"
                    class="absolute w-24 h-24 rounded-full bg-foreground pointer-events-none opacity-0 transition-opacity duration-300 ease-in-out blur-[150px] [will-change:filter]"
                >
                </div>
            </div>
            <div
                class="w-48
							h-48
					absolute
					-top-48
					-left-48
					border-b
					border-r
					border-dashed
					[mask-image:linear-gradient(to_bottom_right,transparent_50%,black)]"
            >
            </div>

            <div
                class="w-48
							h-48
							absolute
							-bottom-48
							-right-48
							border-t
							border-l
							border-dashed
							[mask-image:linear-gradient(to_top_left,transparent_50%,black)]"
            >
            </div>
            <div
                class="w-48
							h-48
							absolute
							-top-48
							-right-48
							border-b
							border-l
							border-dashed
							[mask-image:linear-gradient(to_bottom_left,transparent_50%,black)]"
            >
            </div>
            <div
                class="w-48
							h-48
							absolute
							-bottom-48
							-left-48
							border-t
							border-r
							border-dashed
							[mask-image:linear-gradient(to_top_right,transparent_50%,black)]"
            >
            </div>
            <GridIcon
                class="absolute h-6 w-6 -top-3 -left-3 dark:text-white text-foreground"
            />
            <GridIcon
                class="absolute h-6 w-6 -bottom-3 -left-3 dark:text-white text-foreground"
            />
            <GridIcon
                class="absolute h-6 w-6 -top-3 -right-3 dark:text-white text-foreground"
            />
            <GridIcon
                class="absolute h-6 w-6 -bottom-3 -right-3 dark:text-white text-foreground"
            />

            {
                projects.map((project) => (
                    <a
                        href={project.url}
                        target="_blank"
                        class={cn(
                            `group border-t border-r border-dashed w-full cursor-pointer hover:[box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.2)] transition-all duration-500 flex flex-col justify-between`,
                            project.feature
                                ? "md:col-span-2 md:grid md:grid-cols-2 items-center"
                                : "md:col-span-1"
                        )}
                    >
                        <div class="p-8 group-hover:-translate-x-2 group-hover:-translate-y-2 transition-all duration-500">
                            <h3 class="text-xl font-bold">
                                <code>{project.title}</code>
                            </h3>
                            <div class="w-full mt-4">
                                <div class="flex flex-col gap-2">
                                    {project.paragraphs.map((paragraph) => (
                                        <p class="text-sm text-foreground/50">
                                            <code>{paragraph}</code>
                                        </p>
                                    ))}
                                </div>
                            </div>
                            <div class="flex gap-2 mt-4 flex-wrap">
                                {project.badges.map((badge) => (
                                    <span class="text-xs border-foreground text-foreground border border-dashed p-1 px-2 rounded-full group-hover:bg-foreground/20 transition-all duration-500">
                                        <code>{badge}</code>
                                    </span>
                                ))}
                            </div>
                        </div>
                        <div
                            class={cn(
                                "relative w-full aspect-video p-8 overflow-hidden"
                            )}
                        >
                            <div class="absolute inset-8 bg-foreground/20 group-hover:translate-x-2 group-hover:translate-y-2 transition-all duration-500 ease-in-out group-hover:[box-shadow:inset_0_0_10px_0_rgba(255,255,255,0.2)]" />
                            <Image
                                src={project.image}
                                alt="Project 1"
                                class="w-full h-full filter grayscale group-hover:filter-none transition-all duration-500 group-hover:-translate-x-2 group-hover:-translate-y-2 group-hover:shadow object-cover"
                            />
                        </div>
                    </a>
                ))
            }
        </div>
    </Section>
</div>
